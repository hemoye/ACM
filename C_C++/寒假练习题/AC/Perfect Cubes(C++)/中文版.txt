
时间限制：2000/1000ms（JAVA /其他）内存限制：20000/10000K（JAVA /其他）
的总提交（）：0接受的意见书（S）：0
问题描述
数百年来，费尔马大定理，简单地说，对于n> 2不存在整数A，B，C> 1，这样一个^ N = B ^ N + C ^ N闪烁其词，一直未经证实的。（最近的证据被认为是正确的，但它仍然接受审查）。这是可能的，但是，找到整数大于1，满足“完美的立方体”方程^ 3 = B ^ 3 + C ^ 3 + D ^ 3（例如，快速计算显示，式（12）^ 3 = 6 ^ 3 + 8 ^ 3 + 10 ^ 3是事实的确如此）。这个问题，你需要写一个程序，找出所有的数字{A，B，C，D}满足该方程为<= N
 

输入
一个整数N（N <= 100）。
 

产量
输出应列出，如下所示，每行一个完美的立方体，在非递减的顺序（即行应他们的一个值进行排序）。的b，c和d的值也应中列出的非递减的顺序上的线本身。确实存在着一个可以从多个不同的集合，乙，丙，产生和d的三元组的几个值。在这种情况下，较小的b值的三元组应列在第一位。
 

样例输入
24
 

样本输出
立方= 6，三=（3,4,5）
立方= 12，三重=（6,8,10）
立方= 18，三重=（2,12,16）
立方= 18，三重=（9,12,15）
立方= 19，三重=（3,10,18）
立方= 20，三重=（7,14,17）
立方= 24，三重=（12,16,20）
 

源
PKU
 