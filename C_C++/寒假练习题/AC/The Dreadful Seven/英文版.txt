The Dreadful Seven

Time Limit : 2000/1000ms (Java/Other)   Memory Limit : 32768/32768K (Java/Other)
Total Submission(s) : 0   Accepted Submission(s) : 0
Problem Description
Super Mario is studying how to use a mysterious Power Square. The Power Square is n¡Án with integer values between 0 and n2-1.
A number y is a neighbor of another number x in the Power Square if y is directly above or below x, or directly to the left or right of x. Rosalina asks Super Mario to find all the numbers in the Power Square that are neighbors of the number 7, since she can tell that those numbers are quite nervous.
¡±Why are the numbers scared of seven?¡± Mario asks Rosalina.
¡±Because seven ate nine!¡± Rosalina exclaims.
 

Input
Input is a description of of the Power Square, followed by a number of commands. The first line is the size of the Power Square n. You may assume n<=100. The second line contains the n2 values in the Power Square, separated by spaces. Values start from the top left corner and move from left to right, moving down one row to the leftmost position when a row is filled.
Following the Power Square description are a number of commands, with each command on a separate line. Each command begins with the name of the command, followed by any additional command parameters.
There will no more than 100 commands.
 

Output
The command ¡±SHOW¡± causes the current state of the Power Square to be displayed in n ¡Á n form (each row of n values on a single line, separated by spaces), followed by a blank line.
The command ¡±NEIGHBORS¡± is followed by a value x in the Power Square. The values neighboring x are output and displayed on a single line (in the order: above, left, right, and below x), separated by spaces. You may assume that x is always in the Power Square.
 

Sample Input
3
8 7 6 5 4 3 2 1 0
SHOW
NEIGHBORS 7
NEIGHBORS 1
NEIGHBORS 4
4
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
SHOW
NEIGHBORS 7
NEIGHBORS 1
NEIGHBORS 8
NEIGHBORS 14
 

Sample Output
8 7 6
5 4 3
2 1 0

8 6 4
4 2 0
7 5 3 1
0 1 2 3
4 5 6 7
8 9 10 11
12 13 14 15

3 6 11
0 2 5
4 9 12
10 13 15
 

Source
HDU 2010-05 Programming Contest
 